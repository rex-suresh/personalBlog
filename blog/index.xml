<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Journey</title>
    <link>http://localhost:1313/rex-suresh/personalBlog/blog/</link>
    <description>Recent content in Blogs on Journey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Oct 2022 16:01:20 +0530</lastBuildDate><atom:link href="http://localhost:1313/rex-suresh/personalBlog/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CSS and media queries</title>
      <link>http://localhost:1313/rex-suresh/personalBlog/blog/css-media-queries/</link>
      <pubDate>Sat, 15 Oct 2022 16:01:20 +0530</pubDate>
      
      <guid>http://localhost:1313/rex-suresh/personalBlog/blog/css-media-queries/</guid>
      <description>Media Queries Author: self
Some of my works Github Contact through Email Introduction Css media queries are blocks of code in css which executes when the given query is met. Mostly used for changing page styles at multiple screen sizes.
Css media queries Understanding media query. Using media queries in html, css and js. Parts of a query (1) @media (2) screen (3) (min-width: 100px) (4) and&amp;hellip;
@-Rule This part is where the media query definition starts.</description>
    </item>
    
    <item>
      <title>Lorem Picsum free stock pictures</title>
      <link>http://localhost:1313/rex-suresh/personalBlog/blog/lorem_picsum/</link>
      <pubDate>Sat, 15 Oct 2022 11:55:30 +0530</pubDate>
      
      <guid>http://localhost:1313/rex-suresh/personalBlog/blog/lorem_picsum/</guid>
      <description>Lorem picsum Author: self
Introduction Free image website Lorem Picsum
Lorem Picsum is a Website which provides free stock pictures, provides free api to get free images at requested sizes. These images can be linked to html and every time a url is requested, a random image is served. You can also Query the pictures with their id&amp;rsquo;s https://picsum.photos/id/{id_number} This website, service is hosted by Adobe. </description>
    </item>
    
    <item>
      <title>CSS regex/ attribute selectors</title>
      <link>http://localhost:1313/rex-suresh/personalBlog/blog/css-regex/</link>
      <pubDate>Mon, 19 Sep 2022 19:55:20 +0530</pubDate>
      
      <guid>http://localhost:1313/rex-suresh/personalBlog/blog/css-regex/</guid>
      <description>Learning Bootstrap, sass/scss. (Large) Author: self
Some of my works Github Contact through Email Introduction Css supports regex when styling elements, it uses simple regex match syntax using *, ^, $, ~ to match complete, start, end and contains matches. Things I have learnt.
css regex match start match (^); end match ($); contains match (~); complete/followed match (*); Brief explanation Regex in CSS Regex is also available in css. cool right!</description>
    </item>
    
    <item>
      <title>BOOTSTRAP buttons, colors, cards</title>
      <link>http://localhost:1313/rex-suresh/personalBlog/blog/bootstrap-2/</link>
      <pubDate>Mon, 29 Aug 2022 23:39:08 +0530</pubDate>
      
      <guid>http://localhost:1313/rex-suresh/personalBlog/blog/bootstrap-2/</guid>
      <description>Bootstrap buttons and cards Bootstrap provide predefined styles for buttons and cards. Cards can be small containers having header, image, text, content, footer, etc. Controlling element width, text styles.
Key points gone through
Styling buttons {(class=&amp;ldquo;btn&amp;rdquo;)} Outline buttons {(class=&amp;ldquo;btn-outline&amp;rdquo;)} Colors Use and available colors bg-&amp;lsquo;color&amp;rsquo; primary, secondary, dark, success, danger, light&amp;hellip; Card containers {(class=&amp;ldquo;card&amp;rdquo;)} card-header card-body card-footer card-text card-group Controlling width {(w-50, w-60) widths % in space} Text-muted Brief explanation As Bootstrap provides predefined styles for elements like buttons and some preset styles like card, we can use those styling properties to control element styles.</description>
    </item>
    
    <item>
      <title>BOOTSTRAP containers and grid system</title>
      <link>http://localhost:1313/rex-suresh/personalBlog/blog/bootstrap-1/</link>
      <pubDate>Sun, 28 Aug 2022 21:55:34 +0530</pubDate>
      
      <guid>http://localhost:1313/rex-suresh/personalBlog/blog/bootstrap-1/</guid>
      <description>Learning Bootstrap, sass/scss. (Large) Author: self
Some of my works Github Contact through Email Introduction Boot strap is a css framework which is used by developers to make mobile first and responsive webpages quickly.
Things I have learnt.
Bootstrap fundamentals containers grid breakpoints column separation fluid auto predefined classes row col row-col-* align-items-* justify-content-* (mx-, my-, m-) margin (gx-, gy-, g-) gutter css regex match Brief explanation Bootstrap uses grid layout of 12 columns to determine predefined sized of elements in screen.</description>
    </item>
    
    <item>
      <title>HUGO Setup</title>
      <link>http://localhost:1313/rex-suresh/personalBlog/blog/first_blog/</link>
      <pubDate>Mon, 22 Aug 2022 12:04:06 -0500</pubDate>
      
      <guid>http://localhost:1313/rex-suresh/personalBlog/blog/first_blog/</guid>
      <description>First blog, Learned a new thing This is my first Blog Very less things to explain, but I came to know about Hugo&amp;rsquo;s themes I assume that Hugo uses a lookup rules internally through themes to determine how a page should be built But this is cool I like this. Starting up. Well Setup for HUGO is as follows
brew install hugo in terminal hugo new site &#39;site_name&#39; creates a folder with the given site_name cd site_name/themes; select a theme for your site git clone {theme-repo} link from github, clones the theme repo.</description>
    </item>
    
  </channel>
</rss>
